<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Jing Lin‘s profile</title><link>http://linjing.io/post/</link><description>Recent content in Posts on Jing Lin‘s profile</description><generator>Source Themes academia (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright &amp;copy; {year} linjing.io host on github,www host on netlify. CI/CD by github actions and netlify.Thanks bootcdn support for front libary CDN</copyright><atom:link href="http://linjing.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Istio sidecar iptables and traffic steering detail</title><link>http://linjing.io/post/istio-traffic-control-deepdive/</link><pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate><guid>http://linjing.io/post/istio-traffic-control-deepdive/</guid><description>&lt;h2 id="istio-injected-iptables">Istio injected iptables&lt;/h2>
&lt;p>Istio implements the hijacking and processing of traffic by injecting the init container and envoy proxy container into the business pod. After the init container runs, the following NAT table rules for iptables will be generated in the corresponding linux namespace&lt;/p>
&lt;pre>&lt;code>&amp;amp;#91;root@k8s-node1-v1-16 ~]# iptables -t nat -L -v
Chain PREROUTING (policy ACCEPT 192K packets, 12M bytes)
pkts bytes target prot opt in out source destination
192K 12M ISTIO_INBOUND tcp -- any any anywhere anywhere
Chain INPUT (policy ACCEPT 192K packets, 12M bytes)
pkts bytes target prot opt in out source destination
Chain OUTPUT (policy ACCEPT 40673 packets, 3694K bytes)
pkts bytes target prot opt in out source destination
8917 535K ISTIO_OUTPUT tcp -- any any anywhere anywhere
Chain POSTROUTING (policy ACCEPT 40673 packets, 3694K bytes)
pkts bytes target prot opt in out source destination
Chain ISTIO_INBOUND (1 references)
pkts bytes target prot opt in out source destination
0 0 RETURN tcp -- any any anywhere anywhere tcp dpt:ssh
356 21360 RETURN tcp -- any any anywhere anywhere tcp dpt:15090
192K 11M RETURN tcp -- any any anywhere anywhere tcp dpt:15021
0 0 RETURN tcp -- any any anywhere anywhere tcp dpt:15020
34 2040 ISTIO_IN_REDIRECT tcp -- any any anywhere anywhere
Chain ISTIO_IN_REDIRECT (3 references)
pkts bytes target prot opt in out source destination
34 2040 REDIRECT tcp -- any any anywhere anywhere redir ports 15006
Chain ISTIO_OUTPUT (1 references)
pkts bytes target prot opt in out source destination
0 0 RETURN all -- any lo 127.0.0.6 anywhere
0 0 ISTIO_IN_REDIRECT all -- any lo anywhere !localhost owner UID match 1337
0 0 RETURN all -- any lo anywhere anywhere ! owner UID match 1337
8917 535K RETURN all -- any any anywhere anywhere owner UID match 1337
0 0 ISTIO_IN_REDIRECT all -- any lo anywhere !localhost owner GID match 1337
0 0 RETURN all -- any lo anywhere anywhere ! owner GID match 1337
0 0 RETURN all -- any any anywhere anywhere owner GID match 1337
0 0 RETURN all -- any any anywhere localhost
0 0 ISTIO_REDIRECT all -- any any anywhere anywhere
Chain ISTIO_REDIRECT (1 references)
pkts bytes target prot opt in out source destination
0 0 REDIRECT tcp -- any any anywhere anywhere redir ports 15001
&lt;/code>&lt;/pre>&lt;h2 id="outbound-flow-control">Outbound flow control&lt;/h2>
&lt;p>When the business container sends the request to the outside, such as productpage to reviews: 9080 port access, this connection will be redirected by iptables to port 127.0.0.1:115001, and then processed by envoy.&lt;/p>
&lt;blockquote>
&lt;p>REDIRECT
This target is only valid in the nat table, in the PREROUTING and OUTPUT chains, and user-defined chains which are only called from those chains. It redirects the packet to the machine itself by changing the destination IP to the primary address of the incoming interface (locally-generated packets are mapped to the localhost address, 127.0.0.1 for IPv4 and ::1 for IPv6).&lt;/p>
&lt;p>&lt;a href="https://ipset.netfilter.org/iptables-extensions.man.html#lbDK">https://ipset.netfilter.org/iptables-extensions.man.html#lbDK&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>The virtualOutbound in envoy will be hit. This is a special listener. It contains the Original Destination listener filter. Note &amp;ldquo;useOriginalDst&amp;rdquo;: truethat after such configuration in the following configuration , envoy will re-find the matching listener in the configuration. If found, press the hit. The listener performs follow-up processing. If it cannot find it, it sends the request to the cluster in this listener. Here is a passthrough cluster. This cluster will forward the packet directly to the fourth layer.&lt;/p>
&lt;pre>&lt;code>root@k8s-master-v1-16 ~]# istioctl proxy-config listener productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo --port 15001 -o json
&amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;virtualOutbound&amp;quot;,
&amp;quot;address&amp;quot;: {
&amp;quot;socketAddress&amp;quot;: {
&amp;quot;address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
&amp;quot;portValue&amp;quot;: 15001
}
},
&amp;quot;filterChains&amp;quot;: &amp;amp;#91;
{
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{\n \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
&amp;quot;root_id&amp;quot;: &amp;quot;stats_outbound&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
&amp;quot;vm_id&amp;quot;: &amp;quot;tcp_stats_outbound&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;PassthroughCluster&amp;quot;,
&amp;quot;cluster&amp;quot;: &amp;quot;PassthroughCluster&amp;quot;,
&amp;quot;accessLog&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
&amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
&amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
}
}
]
}
}
],
&amp;quot;name&amp;quot;: &amp;quot;virtualOutbound-catchall-tcp&amp;quot;
}
],
&amp;quot;useOriginalDst&amp;quot;: true,
&amp;quot;trafficDirection&amp;quot;: &amp;quot;OUTBOUND&amp;quot;
}
]
&lt;/code>&lt;/pre>&lt;p>The above listener will hand over the connection to the listener that matches the original destination IP and port. In the bookinfo example, it will be handed over to the 9080 listener. There is a question to consider here. From the perspective of envoy, the destination port of this link is already 15001, why can it match the following port 0.0.0.0:9080. This is because the NAT is done in the system kernel when iptables is redirected. The system kernel has this converted storage. Envoy obtains the real destination port through getsockopt() , so that it can correctly match the business listener.&lt;/p>
&lt;pre>&lt;code>&amp;amp;#91;root@k8s-master-v1-16 ~]# istioctl proxy-config listener productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo --port 9080 -o json
&amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;0.0.0.0_9080&amp;quot;,
&amp;quot;address&amp;quot;: {
&amp;quot;socketAddress&amp;quot;: {
&amp;quot;address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
&amp;quot;portValue&amp;quot;: 9080
}
},
&amp;quot;filterChains&amp;quot;: &amp;amp;#91;
{
&amp;quot;filterChainMatch&amp;quot;: {
&amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
&amp;quot;http/1.0&amp;quot;,
&amp;quot;http/1.1&amp;quot;,
&amp;quot;h2c&amp;quot;
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;outbound_0.0.0.0_9080&amp;quot;,
&amp;quot;rds&amp;quot;: {
&amp;quot;configSource&amp;quot;: {
&amp;quot;ads&amp;quot;: {}
},
&amp;quot;routeConfigName&amp;quot;: &amp;quot;9080&amp;quot;
},
&lt;/code>&lt;/pre>&lt;pre>&lt;code>&amp;amp;#91;root@k8s-master-v1-16 ~]# istioctl proxy-config listener productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo
ADDRESS PORT TYPE
10.102.252.88 15012 TCP
10.96.122.225 31400 TCP
10.96.0.10 53 TCP
10.110.88.185 15443 TCP
10.96.122.225 15443 TCP
10.110.88.185 443 TCP
10.102.252.88 443 TCP
10.106.109.172 9001 TCP
10.96.0.1 443 TCP
10.96.122.225 443 TCP
10.106.109.172 9000 TCP
10.105.130.171 14267 HTTP+TCP
10.96.81.27 5601 HTTP+TCP
0.0.0.0 15014 HTTP+TCP
10.105.130.171 14250 HTTP+TCP
0.0.0.0 20001 HTTP+TCP
0.0.0.0 9411 HTTP+TCP
10.111.37.34 9090 HTTP+TCP
10.105.145.36 80 HTTP+TCP
10.105.130.171 14268 HTTP+TCP
10.96.0.10 9153 HTTP+TCP
10.110.244.188 80 HTTP+TCP
10.102.252.88 853 HTTP+TCP
10.99.139.251 16686 HTTP+TCP
0.0.0.0 12345 HTTP+TCP
10.103.155.149 80 HTTP+TCP
0.0.0.0 8000 HTTP+TCP
0.0.0.0 15010 HTTP+TCP
10.96.122.225 15020 HTTP+TCP
0.0.0.0 9090 HTTP+TCP
10.107.150.251 80 HTTP+TCP
0.0.0.0 14250 HTTP+TCP
0.0.0.0 80 HTTP+TCP
0.0.0.0 3000 HTTP+TCP
10.110.28.96 8181 HTTP+TCP
10.102.69.143 9200 HTTP+TCP
0.0.0.0 9080 HTTP+TCP 《《《《《《《《《《《《
0.0.0.0 15001 TCP 《《《《《《《《《《《《
0.0.0.0 15006 HTTP+TCP
0.0.0.0 15090 HTTP
0.0.0.0 15021 HTTP
&lt;/code>&lt;/pre>&lt;p>Related passthrough cluster:&lt;/p>
&lt;pre>&lt;code>root@k8s-master-v1-16 ~]# istioctl proxy-config cluster productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo --fqdn PassthroughCluster -o json
&amp;amp;#91;
。。。。忽略。。。
{
&amp;quot;name&amp;quot;: &amp;quot;PassthroughCluster&amp;quot;,
&amp;quot;type&amp;quot;: &amp;quot;ORIGINAL_DST&amp;quot;,
&amp;quot;connectTimeout&amp;quot;: &amp;quot;10s&amp;quot;,
&amp;quot;lbPolicy&amp;quot;: &amp;quot;CLUSTER_PROVIDED&amp;quot;,
&amp;quot;circuitBreakers&amp;quot;: {
&amp;quot;thresholds&amp;quot;: &amp;amp;#91;
{
&amp;quot;maxConnections&amp;quot;: 4294967295,
&amp;quot;maxPendingRequests&amp;quot;: 4294967295,
&amp;quot;maxRequests&amp;quot;: 4294967295,
&amp;quot;maxRetries&amp;quot;: 4294967295
}
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
}
}
}
]
}
]
&lt;/code>&lt;/pre>&lt;h2 id="inbound-flow-control">Inbound flow control&lt;/h2>
&lt;p>When it is an inbound request, the destination address of the packet is the IP of the pod, and the destination port is the real port of the business (9080, non-svc mapping port). Since the link destination port of iptables is changed to 15006, it will Hit virtual inbound listener (0.0.0.0:15006), this listener has a series of filterchain, and the virtualoutbound listener configuration method is different, virtualinbound contains a series of actual service filters for specific ports, the connection will find specific in these fitlers Business matching. So how does it match the real 9080 business? For example, the following output:
addressPrefix can be matched. If the pod actually has multiple ports, only addressPrefix does not match. It also needs to match the application layer protocol, but the DestinationPort in the Match condition is not matched . In fact, it is similar to Virtualoutbound. The filter of the original destination listener is also used, so envoy will obtain the real destination port and IP from the kernel. This configuration method is different from the virtual outbound &amp;ldquo;useOriginalDst&amp;rdquo;: true configuration method, because this is an updated configuration method.&amp;rdquo; useOriginalDst&amp;rdquo;: true This configuration is about to be abandoned.&lt;/p>
&lt;p>&lt;code>&amp;quot;listenerFilters&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;envoy.listener.original_dst&amp;quot;, &amp;quot;typedConfig&amp;quot;: { &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.listener.original_dst.v2.OriginalDst&amp;quot; } },&lt;/code>&lt;/p>
&lt;p>(According to &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener/listener_components.proto,">https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener/listener_components.proto,&lt;/a> the filtermatch condition is that all must match)&lt;/p>
&lt;pre>&lt;code> {
&amp;quot;filterChainMatch&amp;quot;: {
&amp;quot;destinationPort&amp;quot;: 9080,
&amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
{
&amp;quot;addressPrefix&amp;quot;: &amp;quot;10.244.2.138&amp;quot;,
&amp;quot;prefixLen&amp;quot;: 32
}
],
### 根据https://istio.io/latest/zh/docs/ops/deployment/requirements/ ,
### 同一个业务端口是不能被两个用不同协议的svc来发布的，因此这帮助避免了同端口同协议的match在整个配置文件里的出现。
&amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
&amp;quot;istio&amp;quot;,
&amp;quot;istio-http/1.0&amp;quot;,
&amp;quot;istio-http/1.1&amp;quot;,
&amp;quot;istio-h2&amp;quot;
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;inbound_10.244.2.138_9080&amp;quot;,
&amp;quot;routeConfig&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
&amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;inbound|http|9080&amp;quot;,
&amp;quot;domains&amp;quot;: &amp;amp;#91;
&amp;quot;*&amp;quot;
],
&amp;quot;routes&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
&amp;quot;match&amp;quot;: {
&amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
},
&amp;quot;route&amp;quot;: {
&amp;quot;cluster&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
&amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
&amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
},
&amp;quot;decorator&amp;quot;: {
&amp;quot;operation&amp;quot;: &amp;quot;productpage.istio-bookinfo.svc.cluster.local:9080/*&amp;quot;
}
}
]
}
],
&lt;/code>&lt;/pre>&lt;h2 id="last">Last&lt;/h2>
&lt;p>Attach the actual configuration of 15006&lt;/p>
&lt;pre>&lt;code>&amp;amp;#91;root@k8s-master-v1-16 ~]# istioctl proxy-config listener productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo --port 15006 -o json
&amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;virtualInbound&amp;quot;,
&amp;quot;address&amp;quot;: {
&amp;quot;socketAddress&amp;quot;: {
&amp;quot;address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
&amp;quot;portValue&amp;quot;: 15006
}
},
&amp;quot;filterChains&amp;quot;: &amp;amp;#91;
{
&amp;quot;filterChainMatch&amp;quot;: {
&amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
{
&amp;quot;addressPrefix&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
&amp;quot;prefixLen&amp;quot;: 0
}
],
&amp;quot;transportProtocol&amp;quot;: &amp;quot;tls&amp;quot;,
&amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
&amp;quot;istio-peer-exchange&amp;quot;,
&amp;quot;istio&amp;quot;
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{\n \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
&amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
&amp;quot;vm_id&amp;quot;: &amp;quot;tcp_stats_inbound&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;cluster&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;accessLog&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
&amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
&amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
}
}
]
}
}
],
&amp;quot;transportSocket&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;envoy.transport_sockets.tls&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext&amp;quot;,
&amp;quot;commonTlsContext&amp;quot;: {
&amp;quot;tlsCertificateSdsSecretConfigs&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
&amp;quot;sdsConfig&amp;quot;: {
&amp;quot;apiConfigSource&amp;quot;: {
&amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
&amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
{
&amp;quot;envoyGrpc&amp;quot;: {
&amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
}
}
]
}
}
}
],
&amp;quot;combinedValidationContext&amp;quot;: {
&amp;quot;defaultValidationContext&amp;quot;: {},
&amp;quot;validationContextSdsSecretConfig&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;ROOTCA&amp;quot;,
&amp;quot;sdsConfig&amp;quot;: {
&amp;quot;apiConfigSource&amp;quot;: {
&amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
&amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
{
&amp;quot;envoyGrpc&amp;quot;: {
&amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
}
}
]
}
}
}
},
&amp;quot;alpnProtocols&amp;quot;: &amp;amp;#91;
&amp;quot;istio-peer-exchange&amp;quot;,
&amp;quot;h2&amp;quot;,
&amp;quot;http/1.1&amp;quot;
]
},
&amp;quot;requireClientCertificate&amp;quot;: true
}
},
&amp;quot;name&amp;quot;: &amp;quot;virtualInbound&amp;quot;
},
{
&amp;quot;filterChainMatch&amp;quot;: {
&amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
{
&amp;quot;addressPrefix&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
&amp;quot;prefixLen&amp;quot;: 0
}
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{\n \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
&amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
&amp;quot;vm_id&amp;quot;: &amp;quot;tcp_stats_inbound&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;cluster&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;accessLog&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
&amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
&amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
}
}
]
}
}
],
&amp;quot;name&amp;quot;: &amp;quot;virtualInbound&amp;quot;
},
{
&amp;quot;filterChainMatch&amp;quot;: {
&amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
{
&amp;quot;addressPrefix&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
&amp;quot;prefixLen&amp;quot;: 0
}
],
&amp;quot;transportProtocol&amp;quot;: &amp;quot;tls&amp;quot;,
&amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
&amp;quot;http/1.0&amp;quot;,
&amp;quot;http/1.1&amp;quot;,
&amp;quot;h2c&amp;quot;,
&amp;quot;istio-http/1.0&amp;quot;,
&amp;quot;istio-http/1.1&amp;quot;,
&amp;quot;istio-h2&amp;quot;
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;routeConfig&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;inbound|http|0&amp;quot;,
&amp;quot;domains&amp;quot;: &amp;amp;#91;
&amp;quot;*&amp;quot;
],
&amp;quot;routes&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
&amp;quot;match&amp;quot;: {
&amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
},
&amp;quot;route&amp;quot;: {
&amp;quot;cluster&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
&amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
},
&amp;quot;decorator&amp;quot;: {
&amp;quot;operation&amp;quot;: &amp;quot;:0/*&amp;quot;
}
}
]
}
],
&amp;quot;validateClusters&amp;quot;: false
},
&amp;quot;httpFilters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{}\n&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.metadata_exchange&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.cors&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.cors.v2.Cors&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.fault&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.fault.v2.HTTPFault&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{\n \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
&amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
&amp;quot;vm_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.router&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.router.v2.Router&amp;quot;
}
}
],
&amp;quot;tracing&amp;quot;: {
&amp;quot;clientSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
},
&amp;quot;randomSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
},
&amp;quot;overallSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
}
},
&amp;quot;serverName&amp;quot;: &amp;quot;istio-envoy&amp;quot;,
&amp;quot;streamIdleTimeout&amp;quot;: &amp;quot;0s&amp;quot;,
&amp;quot;accessLog&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
&amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
&amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
}
}
],
&amp;quot;useRemoteAddress&amp;quot;: false,
&amp;quot;generateRequestId&amp;quot;: true,
&amp;quot;forwardClientCertDetails&amp;quot;: &amp;quot;APPEND_FORWARD&amp;quot;,
&amp;quot;setCurrentClientCertDetails&amp;quot;: {
&amp;quot;subject&amp;quot;: true,
&amp;quot;dns&amp;quot;: true,
&amp;quot;uri&amp;quot;: true
},
&amp;quot;upgradeConfigs&amp;quot;: &amp;amp;#91;
{
&amp;quot;upgradeType&amp;quot;: &amp;quot;websocket&amp;quot;
}
],
&amp;quot;normalizePath&amp;quot;: true
}
}
],
&amp;quot;transportSocket&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;envoy.transport_sockets.tls&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext&amp;quot;,
&amp;quot;commonTlsContext&amp;quot;: {
&amp;quot;tlsCertificateSdsSecretConfigs&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
&amp;quot;sdsConfig&amp;quot;: {
&amp;quot;apiConfigSource&amp;quot;: {
&amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
&amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
{
&amp;quot;envoyGrpc&amp;quot;: {
&amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
}
}
]
}
}
}
],
&amp;quot;combinedValidationContext&amp;quot;: {
&amp;quot;defaultValidationContext&amp;quot;: {},
&amp;quot;validationContextSdsSecretConfig&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;ROOTCA&amp;quot;,
&amp;quot;sdsConfig&amp;quot;: {
&amp;quot;apiConfigSource&amp;quot;: {
&amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
&amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
{
&amp;quot;envoyGrpc&amp;quot;: {
&amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
}
}
]
}
}
}
},
&amp;quot;alpnProtocols&amp;quot;: &amp;amp;#91;
&amp;quot;h2&amp;quot;,
&amp;quot;http/1.1&amp;quot;
]
},
&amp;quot;requireClientCertificate&amp;quot;: true
}
},
&amp;quot;name&amp;quot;: &amp;quot;virtualInbound-catchall-http&amp;quot;
},
{
&amp;quot;filterChainMatch&amp;quot;: {
&amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
{
&amp;quot;addressPrefix&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
&amp;quot;prefixLen&amp;quot;: 0
}
],
&amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
&amp;quot;http/1.0&amp;quot;,
&amp;quot;http/1.1&amp;quot;,
&amp;quot;h2c&amp;quot;
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;routeConfig&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;inbound|http|0&amp;quot;,
&amp;quot;domains&amp;quot;: &amp;amp;#91;
&amp;quot;*&amp;quot;
],
&amp;quot;routes&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
&amp;quot;match&amp;quot;: {
&amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
},
&amp;quot;route&amp;quot;: {
&amp;quot;cluster&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
&amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
&amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
},
&amp;quot;decorator&amp;quot;: {
&amp;quot;operation&amp;quot;: &amp;quot;:0/*&amp;quot;
}
}
]
}
],
&amp;quot;validateClusters&amp;quot;: false
},
&amp;quot;httpFilters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{}\n&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.metadata_exchange&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.cors&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.cors.v2.Cors&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.fault&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.fault.v2.HTTPFault&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{\n \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
&amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
&amp;quot;vm_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.router&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.router.v2.Router&amp;quot;
}
}
],
&amp;quot;tracing&amp;quot;: {
&amp;quot;clientSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
},
&amp;quot;randomSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
},
&amp;quot;overallSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
}
},
&amp;quot;serverName&amp;quot;: &amp;quot;istio-envoy&amp;quot;,
&amp;quot;streamIdleTimeout&amp;quot;: &amp;quot;0s&amp;quot;,
&amp;quot;accessLog&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
&amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
&amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
}
}
],
&amp;quot;useRemoteAddress&amp;quot;: false,
&amp;quot;generateRequestId&amp;quot;: true,
&amp;quot;forwardClientCertDetails&amp;quot;: &amp;quot;APPEND_FORWARD&amp;quot;,
&amp;quot;setCurrentClientCertDetails&amp;quot;: {
&amp;quot;subject&amp;quot;: true,
&amp;quot;dns&amp;quot;: true,
&amp;quot;uri&amp;quot;: true
},
&amp;quot;upgradeConfigs&amp;quot;: &amp;amp;#91;
{
&amp;quot;upgradeType&amp;quot;: &amp;quot;websocket&amp;quot;
}
],
&amp;quot;normalizePath&amp;quot;: true
}
}
],
&amp;quot;name&amp;quot;: &amp;quot;virtualInbound-catchall-http&amp;quot;
},
{
&amp;quot;filterChainMatch&amp;quot;: {
&amp;quot;destinationPort&amp;quot;: 15021,
&amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
{
&amp;quot;addressPrefix&amp;quot;: &amp;quot;10.244.2.155&amp;quot;,
&amp;quot;prefixLen&amp;quot;: 32
}
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{\n \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
&amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
&amp;quot;vm_id&amp;quot;: &amp;quot;tcp_stats_inbound&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;inbound|15021|mgmt-15021|mgmtCluster&amp;quot;,
&amp;quot;cluster&amp;quot;: &amp;quot;inbound|15021|mgmt-15021|mgmtCluster&amp;quot;,
&amp;quot;accessLog&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
&amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
&amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
}
}
]
}
}
],
&amp;quot;name&amp;quot;: &amp;quot;10.244.2.155_15021&amp;quot;
},
{
&amp;quot;filterChainMatch&amp;quot;: {
&amp;quot;destinationPort&amp;quot;: 9080,
&amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
{
&amp;quot;addressPrefix&amp;quot;: &amp;quot;10.244.2.155&amp;quot;,
&amp;quot;prefixLen&amp;quot;: 32
}
],
&amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
&amp;quot;istio&amp;quot;,
&amp;quot;istio-http/1.0&amp;quot;,
&amp;quot;istio-http/1.1&amp;quot;,
&amp;quot;istio-h2&amp;quot;
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;inbound_10.244.2.155_9080&amp;quot;,
&amp;quot;routeConfig&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
&amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;inbound|http|9080&amp;quot;,
&amp;quot;domains&amp;quot;: &amp;amp;#91;
&amp;quot;*&amp;quot;
],
&amp;quot;routes&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
&amp;quot;match&amp;quot;: {
&amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
},
&amp;quot;route&amp;quot;: {
&amp;quot;cluster&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
&amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
&amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
},
&amp;quot;decorator&amp;quot;: {
&amp;quot;operation&amp;quot;: &amp;quot;productpage.istio-bookinfo.svc.cluster.local:9080/*&amp;quot;
}
}
]
}
],
&amp;quot;validateClusters&amp;quot;: false
},
&amp;quot;httpFilters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{}\n&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.metadata_exchange&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;istio_authn&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/istio.envoy.config.filter.http.authn.v2alpha1.FilterConfig&amp;quot;,
&amp;quot;policy&amp;quot;: {
&amp;quot;peers&amp;quot;: &amp;amp;#91;
{
&amp;quot;mtls&amp;quot;: {
&amp;quot;mode&amp;quot;: &amp;quot;PERMISSIVE&amp;quot;
}
}
]
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.cors&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.cors.v2.Cors&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.fault&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.fault.v2.HTTPFault&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{\n \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
&amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
&amp;quot;vm_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.router&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.router.v2.Router&amp;quot;
}
}
],
&amp;quot;tracing&amp;quot;: {
&amp;quot;clientSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
},
&amp;quot;randomSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
},
&amp;quot;overallSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
}
},
&amp;quot;serverName&amp;quot;: &amp;quot;istio-envoy&amp;quot;,
&amp;quot;streamIdleTimeout&amp;quot;: &amp;quot;0s&amp;quot;,
&amp;quot;accessLog&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
&amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
&amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
}
}
],
&amp;quot;useRemoteAddress&amp;quot;: false,
&amp;quot;generateRequestId&amp;quot;: true,
&amp;quot;forwardClientCertDetails&amp;quot;: &amp;quot;APPEND_FORWARD&amp;quot;,
&amp;quot;setCurrentClientCertDetails&amp;quot;: {
&amp;quot;subject&amp;quot;: true,
&amp;quot;dns&amp;quot;: true,
&amp;quot;uri&amp;quot;: true
},
&amp;quot;upgradeConfigs&amp;quot;: &amp;amp;#91;
{
&amp;quot;upgradeType&amp;quot;: &amp;quot;websocket&amp;quot;
}
],
&amp;quot;normalizePath&amp;quot;: true
}
}
],
&amp;quot;transportSocket&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;envoy.transport_sockets.tls&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext&amp;quot;,
&amp;quot;commonTlsContext&amp;quot;: {
&amp;quot;tlsCertificateSdsSecretConfigs&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
&amp;quot;sdsConfig&amp;quot;: {
&amp;quot;apiConfigSource&amp;quot;: {
&amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
&amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
{
&amp;quot;envoyGrpc&amp;quot;: {
&amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
}
}
]
}
}
}
],
&amp;quot;combinedValidationContext&amp;quot;: {
&amp;quot;defaultValidationContext&amp;quot;: {},
&amp;quot;validationContextSdsSecretConfig&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;ROOTCA&amp;quot;,
&amp;quot;sdsConfig&amp;quot;: {
&amp;quot;apiConfigSource&amp;quot;: {
&amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
&amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
{
&amp;quot;envoyGrpc&amp;quot;: {
&amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
}
}
]
}
}
}
},
&amp;quot;alpnProtocols&amp;quot;: &amp;amp;#91;
&amp;quot;h2&amp;quot;,
&amp;quot;http/1.1&amp;quot;
]
},
&amp;quot;requireClientCertificate&amp;quot;: true
}
},
&amp;quot;name&amp;quot;: &amp;quot;10.244.2.155_9080&amp;quot;
},
{
&amp;quot;filterChainMatch&amp;quot;: {
&amp;quot;destinationPort&amp;quot;: 9080,
&amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
{
&amp;quot;addressPrefix&amp;quot;: &amp;quot;10.244.2.155&amp;quot;,
&amp;quot;prefixLen&amp;quot;: 32
}
]
},
&amp;quot;filters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
&amp;quot;statPrefix&amp;quot;: &amp;quot;inbound_10.244.2.155_9080&amp;quot;,
&amp;quot;routeConfig&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
&amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;inbound|http|9080&amp;quot;,
&amp;quot;domains&amp;quot;: &amp;amp;#91;
&amp;quot;*&amp;quot;
],
&amp;quot;routes&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
&amp;quot;match&amp;quot;: {
&amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
},
&amp;quot;route&amp;quot;: {
&amp;quot;cluster&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
&amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
&amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
},
&amp;quot;decorator&amp;quot;: {
&amp;quot;operation&amp;quot;: &amp;quot;productpage.istio-bookinfo.svc.cluster.local:9080/*&amp;quot;
}
}
]
}
],
&amp;quot;validateClusters&amp;quot;: false
},
&amp;quot;httpFilters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{}\n&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.metadata_exchange&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;istio_authn&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/istio.envoy.config.filter.http.authn.v2alpha1.FilterConfig&amp;quot;,
&amp;quot;policy&amp;quot;: {
&amp;quot;peers&amp;quot;: &amp;amp;#91;
{
&amp;quot;mtls&amp;quot;: {
&amp;quot;mode&amp;quot;: &amp;quot;PERMISSIVE&amp;quot;
}
}
]
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.cors&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.cors.v2.Cors&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.fault&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.fault.v2.HTTPFault&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
&amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
&amp;quot;value&amp;quot;: {
&amp;quot;config&amp;quot;: {
&amp;quot;configuration&amp;quot;: &amp;quot;{\n \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
&amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
&amp;quot;vm_config&amp;quot;: {
&amp;quot;code&amp;quot;: {
&amp;quot;local&amp;quot;: {
&amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
}
},
&amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
&amp;quot;vm_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;
}
}
}
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.router&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.router.v2.Router&amp;quot;
}
}
],
&amp;quot;tracing&amp;quot;: {
&amp;quot;clientSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
},
&amp;quot;randomSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
},
&amp;quot;overallSampling&amp;quot;: {
&amp;quot;value&amp;quot;: 100
}
},
&amp;quot;serverName&amp;quot;: &amp;quot;istio-envoy&amp;quot;,
&amp;quot;streamIdleTimeout&amp;quot;: &amp;quot;0s&amp;quot;,
&amp;quot;accessLog&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
&amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
&amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
}
}
],
&amp;quot;useRemoteAddress&amp;quot;: false,
&amp;quot;generateRequestId&amp;quot;: true,
&amp;quot;forwardClientCertDetails&amp;quot;: &amp;quot;APPEND_FORWARD&amp;quot;,
&amp;quot;setCurrentClientCertDetails&amp;quot;: {
&amp;quot;subject&amp;quot;: true,
&amp;quot;dns&amp;quot;: true,
&amp;quot;uri&amp;quot;: true
},
&amp;quot;upgradeConfigs&amp;quot;: &amp;amp;#91;
{
&amp;quot;upgradeType&amp;quot;: &amp;quot;websocket&amp;quot;
}
],
&amp;quot;normalizePath&amp;quot;: true
}
}
],
&amp;quot;name&amp;quot;: &amp;quot;10.244.2.155_9080&amp;quot;
}
],
&amp;quot;listenerFilters&amp;quot;: &amp;amp;#91;
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.listener.original_dst&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.listener.original_dst.v2.OriginalDst&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.listener.tls_inspector&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.listener.tls_inspector.v2.TlsInspector&amp;quot;
}
},
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.listener.http_inspector&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.listener.http_inspector.v2.HttpInspector&amp;quot;
}
}
],
&amp;quot;listenerFiltersTimeout&amp;quot;: &amp;quot;1s&amp;quot;,
&amp;quot;continueOnListenerFiltersTimeout&amp;quot;: true,
&amp;quot;trafficDirection&amp;quot;: &amp;quot;INBOUND&amp;quot;
}
]
&lt;/code>&lt;/pre>&lt;p>Check more istio practice detail at my tech blog &lt;a href="https://cnadn.net">https://cnadn.net&lt;/a>&lt;/p></description></item><item><title>F5 BIG-IP links Istio to enhance ingress service capabilities</title><link>http://linjing.io/post/f5-istio-work-together/</link><pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate><guid>http://linjing.io/post/f5-istio-work-together/</guid><description>&lt;p>In the Istio system, in order to ensure the unity of policy coordination and experience, users will consider using Istio&amp;rsquo;s own Ingressgateway as the entrance to north-south traffic. Ingressgateway is generally deployed by deployment of multiple pods, scattered on multiple nodes of the cluster, depending on Due to the specific exposure type, especially in on-prem deployment, it is still necessary to deploy relevant load balancers outside the k8s cluster to load balance these ingressgateways, on the one hand, it can avoid access difficulties and operation and maintenance difficulties caused by multiple entrances. On the other hand, the high-performance and high-reliability F5 BIGIP can provide more function control and security value-added services for k8s cluster entrance traffic, which is similar to the Ingress controller.&lt;/p>
&lt;p>Unlike exposing ordinary service svc to external BIG-IP, ingressgateway itself is a collection point of various service ports. It may itself listen to many ports, so it is not easy to treat ingressgateway as a single ordinary svc. This article mainly explains how to combine Istio ingressgateway with BIG-IP to enhance the entrance business capability.&lt;/p>
&lt;p>The possible methods on the network structure are:&lt;/p>
&lt;p>External load balancer &amp;mdash; access to &amp;ndash;&amp;gt; ingressgateway&amp;rsquo;s nodeport port&lt;/p>
&lt;p>External load balancer &amp;mdash; access to &amp;ndash;&amp;gt; ingressgateway direct endpoints port (direct to pod)&lt;/p>
&lt;p>From the point of view of performance, it is naturally the second direct pod method mentioned above that has better performance, depending on the network model of the k8s cluster. If the external and pod can be directly routed or the two-layer direct connection is naturally the easiest, if it cannot be directly routed, it needs to be based on vxlan and other tunnels to achieve pod direct. F5 BIGIP supports Layer 2 direct, dynamic routing or vxlan tunnel mode. Refer to this article for detailed network deployment structure , or search for related articles in this blog. In the following, we assume that F5 BIGIP has implemented vxlan with k8s cluster, which can reach the pod directly. The final data path is as follows:&lt;/p>
&lt;p>&lt;strong>client&amp;ndash;&amp;gt;F5BIGIP&amp;ndash;&amp;gt;Istio ingressgateway pod&amp;ndash;&amp;gt;endpoints&lt;/strong>&lt;/p>
&lt;p>The underlying implementation of Istio Ingressgateway is envoy. When we publish a service to Ingressgateway through Gateway+VirtualService resource, Ingressgateway will listen to the port specified in Gateway. Therefore, once a new service is released, there may be a new listening port. However, when we deploy the ingressgateway pod, we will not configure all the external mappings in advance. That is to say, the port that the container in the pod listens to is not configured in the deployment of the pod. Don’t worry, it can be directly accessed at this time. This listening port on the pod, although the deployment port is not specified in advance.&lt;/p>
&lt;p>So how to load balance for Ingressgateway through BIGIP and dynamically discover these new monitoring services? The answer is naturally the solution described in this article. F5 BIGIP provides a controller that runs inside k8s and automatically pushes these changes to BIGIP. on. Since the same k8s svc contains one more port, you need to pay attention to the servicePort parameter when publishing this k8s svc to F5. The specific publishing process refers to the following steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Deploy Istio Gateway+VirtualService resources&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Edit the k8s svc corresponding to the existing Ingressgateway and add new port and target port configurations&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Configure a new F5 configmap resource and specify the corresponding servicePort to publish the new service&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="demo">DEMO:&lt;/h2>
&lt;ol>
&lt;li>First check the existing Ingressgateway pod ports are as follows, port 32400 is not exposed in the container port&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> name: istio-proxy
ports:
- containerPort: 15020
protocol: TCP
- containerPort: 8080
protocol: TCP
- containerPort: 8443
protocol: TCP
- containerPort: 31400
protocol: TCP
- containerPort: 15443
protocol: TCP
- containerPort: 15011
protocol: TCP
- containerPort: 15012
protocol: TCP
- containerPort: 8060
protocol: TCP
- containerPort: 853
protocol: TCP
- containerPort: 15090
name: http-envoy-prom
protocol: TCP
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>Deploy Istio Gateway and VirtualService&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
name: tcp-echo-gateway
spec:
selector:
istio: ingressgateway
servers:
- port:
number: 32400
name: tcp
protocol: TCP
hosts:
- &amp;quot;*&amp;quot;
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
name: tcp-echo-destination
spec:
host: tcp-echo
subsets:
- name: v1
labels:
version: v1
- name: v2
labels:
version: v2
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
name: tcp-echo
spec:
hosts:
- &amp;quot;*&amp;quot;
gateways:
- tcp-echo-gateway
tcp:
- match:
- port: 32400 ###########32400端口监听
route:
- destination:
host: tcp-echo
port:
number: 9000
subset: v1
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>After the deployment is complete, check envoy to confirm that the monitoring has been issued&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> {
&amp;quot;name&amp;quot;: &amp;quot;0.0.0.0_32400&amp;quot;,
&amp;quot;address&amp;quot;: {
&amp;quot;socketAddress&amp;quot;: {
&amp;quot;address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
&amp;quot;portValue&amp;quot;: 32400
}
},
&amp;quot;filterChains&amp;quot;: &amp;amp;#91;
{
&amp;quot;filters&amp;quot;: &amp;amp;#91;
。。。。。。。。。。省略。。。。。。。。。。
{
&amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
&amp;quot;typedConfig&amp;quot;: {
&amp;quot;@type&amp;quot;:
。。。。。
&amp;quot;cluster&amp;quot;: &amp;quot;outbound|9000|v1|tcp-echo.istio-io-tcp-traffic-shifting.svc.cluster.local&amp;quot;,
。。。。。
}
}
]
}
],
&amp;quot;trafficDirection&amp;quot;: &amp;quot;OUTBOUND&amp;quot;
},
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>Modify the existing Ingressgateway svc, increase the external exposure of 32400 port&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>kubectl edit svc istio-ingressgateway -n istio-system -o yaml
修改前：
ports:
- name: status-port
nodePort: 31702
port: 15020
protocol: TCP
targetPort: 15020
- name: http2
nodePort: 31547
port: 80
protocol: TCP
targetPort: 8080
- name: https
nodePort: 31956
port: 443
protocol: TCP
targetPort: 8443
- name: tcp
nodePort: 30775
port: 31400
protocol: TCP
targetPort: 31400
- name: tls
nodePort: 30536
port: 15443
protocol: TCP
targetPort: 15443
selector:
app: istio-ingressgateway
istio: ingressgateway
sessionAffinity: None
type: LoadBalancer
修改后：
ports:
- name: status-port
nodePort: 31702
port: 15020
protocol: TCP
targetPort: 15020
- name: http2
nodePort: 31547
port: 80
protocol: TCP
targetPort: 8080
- name: https
nodePort: 31956
port: 443
protocol: TCP
targetPort: 8443
- name: tcp
nodePort: 30775
port: 31400
protocol: TCP
targetPort: 31400
- name: tcp2
nodePort: 30776
port: 32400
protocol: TCP
targetPort: 32400 #########新增端口
- name: tls
nodePort: 30536
port: 15443
protocol: TCP
targetPort: 15443
root@k8s-master-v1-16 ~]# kubectl get svc -n istio-system
NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE
grafana ClusterIP 10.96.165.101 &amp;amp;lt;none&amp;gt; 3000/TCP 2d
istio-egressgateway ClusterIP 10.110.88.185 &amp;amp;lt;none&amp;gt; 80/TCP,443/TCP,15443/TCP 2d
istio-ingressgateway LoadBalancer 10.96.122.225 &amp;amp;lt;pending&amp;gt; 15020:31702/TCP,80:31547/TCP,443:31956/TCP,31400:30775/TCP,32400:30776/TCP,15443:30536/TCP 2d
istiod ClusterIP 10.102.252.88 &amp;amp;lt;none&amp;gt; 15010/TCP,15012/TCP,443/TCP,15014/TCP,53/UDP,853/TCP 2d
jaeger-agent ClusterIP None &amp;amp;lt;none&amp;gt; 5775/UDP,6831/UDP,6832/UDP 2d
jaeger-collector ClusterIP 10.105.130.171 &amp;amp;lt;none&amp;gt; 14267/TCP,14268/TCP,14250/TCP 2d
jaeger-collector-headless ClusterIP None &amp;amp;lt;none&amp;gt; 14250/TCP 2d
jaeger-query ClusterIP 10.99.139.251 &amp;amp;lt;none&amp;gt; 16686/TCP 2d
kiali ClusterIP 10.101.189.237 &amp;amp;lt;none&amp;gt; 20001/TCP 2d
prometheus ClusterIP 10.109.157.108 &amp;amp;lt;none&amp;gt; 9090/TCP 2d
tracing ClusterIP 10.101.62.56 &amp;amp;lt;none&amp;gt; 80/TCP 2d
zipkin ClusterIP 10.98.181.246 &amp;amp;lt;none&amp;gt; 9411/TCP
&lt;/code>&lt;/pre>&lt;ol start="5">
&lt;li>Publish the 32400 servicePort to F5, at this time you need to add an F5 configmap, pay attention to the Chinese comments&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>kind: ConfigMap
apiVersion: v1
metadata:
name: istio-ingressgateway.32400.vs
namespace: istio-system
labels:
f5type: virtual-server
data:
# See the f5-schema table for schema-controller compatibility
# https://clouddocs.f5.com/containers/latest/releases_and_versioning.html#f5-schema
schema: &amp;quot;f5schemadb://bigip-virtual-server_v0.1.7.json&amp;quot;
data: |
{
&amp;quot;virtualServer&amp;quot;: {
&amp;quot;backend&amp;quot;: {
&amp;quot;serviceName&amp;quot;: &amp;quot;istio-ingressgateway&amp;quot;,
&amp;quot;servicePort&amp;quot;: 32400
####It is important here. The port of the corresponding k8s svc is filled in here. The F5 CIS controller will automatically find the targetPort (CIS cluster mode) or nodeport (CIS nodeport mode) corresponding to the servicePort
},
&amp;quot;frontend&amp;quot;: {
&amp;quot;virtualAddress&amp;quot;: {
&amp;quot;port&amp;quot;: 31400,
&amp;quot;bindAddr&amp;quot;: &amp;quot;172.16.100.195&amp;quot;
},
&amp;quot;partition&amp;quot;: &amp;quot;k8s&amp;quot;,
&amp;quot;balance&amp;quot;: &amp;quot;least-connections-member&amp;quot;,
&amp;quot;mode&amp;quot;: &amp;quot;tcp&amp;quot;
}
}
}
&lt;/code>&lt;/pre>&lt;p>F5 will automatically generate the following configuration in the red box:&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/06/1592839169293-1024x418.jpg?v=1592839202" alt="F5 will automatically generate the following configuration in the red box:">&lt;/p>
&lt;p>Simulate access to the business from the outside, you can see that it can be accessed normally&lt;/p>
&lt;pre>&lt;code># jlin @ Mac in ~ &amp;amp;#91;myf5.net]
$ for i in {1..2000}; do (date; sleep 1) | nc istiobookinfo.lab.f5se.io 32400; done
one Mon Jun 22 22:24:17 CST 2020
one Mon Jun 22 22:24:18 CST 2020
one Mon Jun 22 22:24:19 CST 2020
&lt;/code>&lt;/pre>&lt;p>At this point, the newly released service monitor on Istio Ingressgateway is successfully automatically posted to BIGIP. Users only need to access BIGIP&amp;rsquo;s VS to access services within k8s (on Istio Ingressgateway).&lt;/p>
&lt;p>For the subsequent release of other new port services, repeat the above steps.&lt;/p>
&lt;blockquote>
&lt;p>Note: The above configuration uses the non-F5 AS3 configmap configuration method, if you are using CIS 2.0, you need to pay attention to this issue
&lt;a href="https://github.com/F5Networks/k8s-bigip-ctlr/issues/1341">https://github.com/F5Networks/k8s-bigip-ctlr/issues/1341&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Check more istio practice detail at my tech blog &lt;a href="https://cnadn.net">https://cnadn.net&lt;/a>&lt;/p></description></item><item><title>NGINX and oAuth2/OIDC series one</title><link>http://linjing.io/post/nginx-oauth2-oidc-series/</link><pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate><guid>http://linjing.io/post/nginx-oauth2-oidc-series/</guid><description>&lt;p>Nowadays, the Internet has penetrated various life and business scenarios. Just like people have never been a simple individual in real life, we need to have many complicated relationship networks. The same is true of Internet applications, and it is now difficult to see which application can develop completely independently without having a relationship with its surroundings. Therefore, today&amp;rsquo;s applications are very particular about their own ecology, and they need to share a lot of information with each other. These complex relationships raise a very important issue: identity authentication, resource authorization, and account maintenance. Of course there is API authentication access control.&lt;/p>
&lt;p>For example, in your daily life, you may need to use dozens of apps. Each of these apps has an independent account and password. You need to maintain different accounts and passwords. You may have one set of accounts for all apps in order to save trouble. Password, so after the application A was violently vaulted, you are forced to change all the passwords of the accounts of these dozens of apps. You may also be more concerned about the security of your account, so you use a fixed + changing password to combine dozens of APP accounts, which is very good, can help alleviate a large part of security issues, and at the same time reduce your password maintenance. Question (Is the memory okay), but these apps may not be able to follow the fixed + change mode you envisioned as you wish, some may only support numbers, some support numbers plus passwords, and some still It requires a minimum length and a more complicated combination, so you start to use a small book to record the password format of different applications (well, at least there was a stage where I did this, recorded in a description language on the computer, when forgotten At that time, go to find this hint in the computer).&lt;/p>
&lt;p>Is there a better way?&lt;/p>
&lt;p>If you trust a company that has done well in security and has a good reputation system, can you use this account to run the Internet? I believe we already have the answer. Today, we may have used it a lot of times. When you log in to the XX application, you are used to skip user registration and go to click &amp;ldquo;log in with ***&amp;rdquo;, in the pop-up interface Here is a very sacred point under &amp;ldquo;Agree&amp;rdquo;. So you no longer need to remember so many application accounts. This is actually a typical open authorization (Open Authorization) referred to as oAuth (current version is 2, also known as oAuth2).&lt;/p>
&lt;p>Um, you seem to be lying to me. You have said so much, it seems to be all about authentication, why it is said to be Authorization. Yes, you are right, but I did not lie to you, but there are some silly problems that are not easy to distinguish. The original purpose of this oAuth design is to solve the problem of data access between interest groups, just like us As mentioned at the beginning, there is a problem of mutual access to a large amount of data between applications of different companies. For example, company A has developed an online photo printing application, but this company does not operate photo storage services. Your photos may exist in B, C, D. On the network disks of different companies (Yes, in order to take advantage of the early days, I did occupy a lot of the network disks of many companies. Later, some of their network disks used rogues to send a notice and couldn&amp;rsquo;t do anything. Fortunately, I used RAID1), so this caused problems. How do you send photos to this online printing company, download them from the BCD network disk and send them to them? Give the account number and password of the network disk to the printing company? Obviously these methods will not work. If you rely on downloading and uploading, it is estimated that you are too lazy to get it. If you are giving an account password, unless you are not sober.&lt;/p>
&lt;p>For printing companies and network disk service providers, they also have similar troubles. If users are allowed to upload and download, the user experience is too bad, and they also maintain a whole set of such systems. Therefore, printing companies hope that there is a simple way to connect at the same time. BCD network disk company, as long as one of the users of these network disks agrees, it will automatically pull down the user photos from these network disks to print, and own 0 inventory. For the BCD network disk company, storing cold data alone is obviously not the purpose. Moreover, you are still in piao, you have to do tricks, so the network disk company also wants to dock these companies that print pictures, but for them It is necessary to solve the user&amp;rsquo;s security issues on accounts and photos.&lt;/p>
&lt;p>So it can be seen that for these three different stakeholders, there is a desire to have something to solve their problems at the same time. This is authorization. When the user wants to print the photo, the printing company guides the customer to enter the network disk interface. The user is Log in to the network disk and authorize the network disk to allow which of my resources to be shared with the photo printing company. For example, share your beautiful photos to print, and the original photos are not allowed to be accessed by the printing company, which is very safe. So we can summarize:&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/1589076716809-1024x441.jpg?v=1589076733" alt="">&lt;/p>
&lt;p>oAuth is used to solve such a scenario, so you can see that it is an authorization process. But you haven’t said why it was a certification at the beginning, hmmm. After all, I also spent a lot of time to learn it. It is also a process after finishing it. Just like this article, it is a series. Only the following articles can be finished:&lt;/p>
&lt;ol>
&lt;li>NGINX as (Client) role and resource service role proxy in oAuth, Authorization code mode (with oAuth proxy service)-this article&lt;/li>
&lt;li>NGINX as (Client) role and resource service role proxy in oAuth, Authorization code mode (Without the help of oAuth proxy service)&lt;/li>
&lt;li>NGINX authenticates and recognizes id_token in OIDC (Implicit mode)&lt;/li>
&lt;li>NGINX acts as a resource service role in oAuth, proxy authentication and identity information recognition (Token introspection)&lt;/li>
&lt;/ol>
&lt;p>Why is authentication involved here? In fact, you will find that during the authorization process, the identity is obviously inescapable. The authorization must be based on a certain user, so the oAuth specification does not emphasize that you can’t do this. In addition to authorization, plus sometimes, we really do not need authorization scenarios, but want to reduce our account maintenance, use one company account to log in many products of other companies, so there are a lot of oAuth For authentication scenarios, of course, it is precisely because oAuth does not make many standardized definitions for authentication, which leads to different designs of programs of different companies when implementing authentication. There is no standard way to obtain user information. A common standard scope, based on this, OpenID Connect (OIDC) appeared. OIDC is based on oAuth. The communication process of several parties is the same. The difference is that OIDC is sending to IdP (the party that stores the account and performs verification). When the request is initiated, the openid tag will be brought in the scope. In the end, the information returned by the IdP will also carry an ID token (JWT) in addition to the oAuth normal access_token, and the application can use it as a login after getting this ID token. If you need more additional information, you can take the access_token and go to the userinfo endpoint to get more user information. In addition, OIDC is a protocol family and contains many other specifications, such as session management and registration discovery. Because oAuth and OIDC are very similar in communication mechanism, we often confuse the two. We often say that oAuth authentication should actually be oAuthZ, and OIDC is oAuthN.&lt;/p>
&lt;p>Back to this article, in this article, we will follow the interaction of a standard oAuth authorization code mode to see what NGINX can help users do here, and why NGINX is needed to do such a thing.&lt;/p>
&lt;p>First, we need to sort out the entire interaction process in the oAuth authorization code mode. In order to avoid the obscurity of RFC , let&amp;rsquo;s assume a scenario.&lt;/p>
&lt;p>You are in a startup company, such as a company engaged in AI and big data (of course, it is not listed yet, it is listed, and you may not have time to read this article), your company uses a lot of cloud service examples, buy servers to engage in computer rooms , Engage in infrastructure, that is not a thing. You have used open source to build a lot of systems, and quickly put your business online. Everyone knows that open source systems have a great feature, which is friendly to developers. What does it mean, how is it convenient (that is, developers are lazy, non- To be straight&amp;hellip;), so you see that many open source systems don’t think about authentication, and you visit it after installing it. It seems that there is no account authentication as a matter of course. At first, it didn’t matter, because you were alone, what You have to do everything, as more and more systems, employees begin to increase, you need to make some restrictions on access to different systems for different people, and you are still going to go public, as a public company, your system There is no account, so it is unreasonable. Then you have some application development systems that need to connect to the github API. You need to allow only some advanced developers to access a private repo. And you have no time to build a new user management system yourself. Fortunately, these people have github accounts, so you can use these github accounts to do the simplest and fastest things. These requirements can be summarized as:&lt;/p>
&lt;p>A function needs to be implemented on different systems to enable these systems to interface with github, and use the github account to determine whether employees can access a certain system
Log in with the github account on the application development system, and apply for resource authorization from github to include the person’s repo and other information. If the person does not have the private repo permission, the natural application development system cannot obtain the private under the permission of this employee. repo content
These requirements oAuth can help solve, but there is a problem. If you join the oAuth mechanism, you need to develop on the system. So many open source systems, the development language is different, and even some systems dare not rush to redevelop. It is actually very difficult to achieve and the workload is actually very large.&lt;/p>
&lt;p>Before looking at what NGINX can do, let&amp;rsquo;s take a look at the oAuth process without NGINX and the above requirements.&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/1589087602055-1024x534.jpg?v=1589087614" alt="">&lt;/p>
&lt;p>From the above process, it can be seen that for users, they log in and authorize once on github, and the browser makes two jumps. The really useful access_token is between the back-end application server and github. The user and the browser itself cannot see the content of this access_token, which is called the backend channel and is relatively safe. So what does the application do after getting this access_token?&lt;/p>
&lt;p>-If it is limited to obtaining some basic information of the user, and the returned access_token is JWT, then the application server can obtain the content in the JWT by itself, so that the user information extraction is associated with some local user IDs, which can be used as Used for login (of course, if it is pure identity authentication and this joint login scenario, in fact, OIDC should still be considered). Of course, if the access_token here is opaque, then the application server also needs to do token introspection, that is, it needs to be verified again with the authorized party before the relevant information can be used.&lt;/p>
&lt;p>-If it is not limited to obtaining user information, but to obtain additional resources, such as the need to obtain the person&amp;rsquo;s repo content, then the application server needs to access this access_token to access a github repo resource server (resource server and The authorization servers are not necessarily the same, and large-scale scenes are usually not the same) to obtain the person&amp;rsquo;s repo content, then the above picture becomes like this:&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/1589088979883-1024x570.jpg?v=1589089012" alt="">&lt;/p>
&lt;p>So, you will find that the web application backend is very critical. It participates in the entire oAuth process and finally obtains the access_token. Imagine, as you said at the beginning of the company, many open source are developed in different languages. System, you have to transform to add this ability. At this time, you actually only want to decide based on the user&amp;rsquo;s information that the system must be logged in through the oAuth process before it can be accessed, or the system determines who can access based on the user name.&lt;/p>
&lt;p>This work can actually be achieved by placing NGINX in front of the web application backend, which means that NGINX is allowed to participate in the oAuth authentication process on behalf of the backend application, and then NGINX can decide whether to allow or reject certain users based on access_token, or Transparently transmit user information to back-end applications for more processing.&lt;/p>
&lt;p>Carefully observe the entire verification process above, which requires NGINX to participate in the construction of the jump return, and use the authorization code to construct the request to directly access the github authorization server. If these tasks are done purely on NGINX, it is actually very difficult. Development through njs is a way but requires the ability to authenticate JWT (so NGINX Plus does not need to install an oauth proxy service like the demo in this article, It can be realized by directly using the njs module + KV module + JWT module. For details, please refer to the second part of this series), but in fact, it can be achieved with the help of the ability of auth_request and an oAuth proxy, which means that we need to be in various The implementation code of the oAuth authentication process created on the open source system is abstracted to it, and a general one is involved. The oAuth proxy agent participates in this oAuth process, and finally the obtained access_token is parsed out. The relevant claims information is returned to NGINX, NGINX Based on this information, we will control whether to allow access to a resource, or transparently pass relevant user information to the final application. So its implementation logic is as follows:&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/1589090989794-1024x566.jpg?v=1589091004" alt="">&lt;/p>
&lt;p>The idea and principle of implementation (the following serial number has nothing to do with the figure):&lt;/p>
&lt;ol>
&lt;li>Configure NGINX to publish protected applications&lt;/li>
&lt;li>Configure auth_request under the location section of the relevant application&lt;/li>
&lt;li>In this way, when the request reaches NGINX, NGINX will initiate the sub-request authentication by auth_request&lt;/li>
&lt;li>The sub-request will be proxy_pass to an interface of the oauth proxy service&lt;/li>
&lt;li>According to the characteristics of auth_request, it is necessary for oauth proxy to return the relevant status code to indicate whether NGINX is released or returns 401&lt;/li>
&lt;li>Therefore, after receiving the sub-request, the oauth proxy will determine whether the user has previously completed the relevant oauth authentication work. If the user has not logged in, or the validity period has expired, then the oauth proxy returns 401 (here depends on whether the user browser carries the oauth proxy Issued by a cookie information to check)&lt;/li>
&lt;li>NGINX intercepts the status of 401, and implements the definition of error_page to send a 302 jump to the user&amp;rsquo;s browser if 401 is returned. The address of this jump is actually a special interface of oauth proxy used to trigger the subsequent oAuth process. The subsequent process is no different from normal oAuth.&lt;/li>
&lt;li>After the oAuth proxy completes the entire oAuth process, it returns a 302 jump to the user browser, and this return will also carry the relevant cookie to allow it to revisit the protected application&lt;/li>
&lt;li>After NGINX receives the request, it triggers auth_request again. auth_request sends the request to an interface of oauth proxy again. This visit carries the cookie in 8. This way, the oauth proxy knows who it is based on the cookie, and resolves its access_token to pass relevant claims. Put it in the response header and return to NGINX&lt;/li>
&lt;li>Use auth_request_set to put the claims in the response header of the sub-request into variables and pass it to the parent request&lt;/li>
&lt;li>NGINX judges whether to release based on these variables, or puts these user information in the request header to pass the content to the last protected application&lt;/li>
&lt;/ol>
&lt;p>There are many implementations of such an oauth proxy online, here is a brief list:
&lt;a href="https://github.com/vouch/vouch-proxy">vouch-proxy&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/oauth2-proxy/oauth2-proxy">oauth2 proxy&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/jirutka/ngx-oauth">oauth2 proxy by lua -implement proxy directly in lua, no need to install additional proxy service&lt;/a>&lt;/p>
&lt;h2 id="demo">Demo&lt;/h2>
&lt;p>This demonstration uses NGINX plus and vouch-proxy to achieve. For the specific installation and configuration of vouch-proxy, please refer to its github directly, it is not complicated&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/1589093713142-1024x705.jpg?v=1589093738" alt="">&lt;/p>
&lt;p>In the actual demo, the web application backend actually has an intermediate NGINX to simulate, using return to return the content.&lt;/p>
&lt;p>NGINX configuration:&lt;/p>
&lt;pre>&lt;code>############entry for protected app http://authcode.cnadn.net/personalinfo
server {
listen 80;
server_name authcode.cnadn.net;
#root /var/www/html/;
# send all requests to the `/validate` endpoint for authorization
auth_request /validate;
#The location is for auth_request subrequest
location = /validate {
# forward the /validate request to Vouch Proxy
proxy_pass http://127.0.0.1:9090/validate;
# be sure to pass the original host header
proxy_set_header Host $http_host;
# Vouch Proxy only acts on the request headers
proxy_pass_request_body off;
proxy_set_header Content-Length &amp;quot;&amp;quot;;
# optionally add X-Vouch-User as returned by Vouch Proxy along with the request
auth_request_set $auth_resp_x_vouch_user $upstream_http_x_vouch_user;
# these return values are used by the @error401 call
auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
}
# if validate returns `401 not authorized` then forward the request to the error401block
error_page 401 = @error401;
location @error401 {
# redirect to Vouch Proxy for login
return 302 http://vouch.cnadn.net/login?url=$scheme://$http_host$request_uri&amp;amp;amp;vouch-failcount=$auth_resp_failcount&amp;amp;amp;X-Vouch-Token=$auth_resp_jwt&amp;amp;amp;error=$auth_resp_err;
# you usually *want* to redirect to Vouch running behind the same Nginx config proteced by https
# but to get started you can just forward the end user to the port that vouch is running on
}
# for the real service that being protected
location / {
# forward authorized requests to your service protectedapp.yourdomain.com
##he backend real server also simiulated by this nginx
proxy_pass http://127.0.0.1:8080;
# you may need to set these variables in this block as per https://github.com/vouch/vouch-proxy/issues/26#issuecomment-425215810
auth_request_set $auth_resp_x_vouch_user $upstream_http_x_vouch_user;
auth_request_set $auth_resp_x_vouch_idp_claims_avatar $upstream_http_x_vouch_idp_claims_avatar_url;
auth_request_set $auth_resp_x_vouch_idp_claims_company $upstream_http_x_vouch_idp_claims_company;
auth_request_set $auth_resp_x_vouch_idp_claims_blog $upstream_http_x_vouch_idp_claims_blog;
# set user header (usually an email)
proxy_set_header X-Vouch-User $auth_resp_x_vouch_user;
# optionally pass any custom claims you are tracking
proxy_set_header X-Vouch-IdP-Claims-company $auth_resp_x_vouch_idp_claims_company;
proxy_set_header X-Vouch-IdP-Claims-avatar $auth_resp_x_vouch_idp_claims_avatar;
proxy_set_header X-Vouch-IdP-Claims-blog $auth_resp_x_vouch_idp_claims_blog;
}
}
&lt;/code>&lt;/pre>&lt;p>Simulation configuration of back-end applications&lt;/p>
&lt;pre>&lt;code> server {
listen 8080;
location /personalinfo {
default_type text/html;
set $user $http_x_vouch_user;
set $avatar $http_x_vouch_idp_claims_avatar;
set $company $http_x_vouch_idp_claims_company;
set $blog $http_x_vouch_idp_claims_blog;
return 200 '&amp;amp;lt;html&amp;gt;&amp;amp;lt;head&amp;gt;&amp;amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot; /&amp;gt;&amp;amp;lt;/head&amp;gt;&amp;amp;lt;h2&amp;gt;Your personal info:&amp;amp;lt;/h2&amp;gt;&amp;amp;lt;hr /&amp;gt;Name: $user &amp;amp;lt;br&amp;gt;avatar: $avatar &amp;amp;lt;br&amp;gt;company: $company &amp;amp;lt;br&amp;gt;blog:$blog &amp;amp;lt;/html&amp;gt;';
}
}
&lt;/code>&lt;/pre>&lt;p>Responsible for receiving the request configuration initiated by the client browser to the oauth proxy:&lt;/p>
&lt;pre>&lt;code>#######work for vouch login/auth
server {
listen 80;
server_name vouch.cnadn.net;
location / {
proxy_pass http://127.0.0.1:9090;
# be sure to pass the original host header
proxy_set_header Host vouch.cnadn.net;
}
}
&lt;/code>&lt;/pre>&lt;p>The effect of the visit process:
&lt;img src="https://www.cnadn.net/upload/2020/05/%E5%9B%BE%E7%89%87-1-1-653x1024.png?v=1589095217" alt="">&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/%E5%9B%BE%E7%89%87-2-682x1024.png?v=1589095226" alt="">&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/1589096005904.jpg?v=1589096014" alt="">&lt;/p>
&lt;p>The first visit to &lt;a href="http://authcode.cnadn.net/personalinfo,">http://authcode.cnadn.net/personalinfo,&lt;/a> the browser is automatically jumped to the vouch.cnadn.net/login? interface, this jump is actually driven by NGINX&lt;/p>
&lt;p>After receiving it, vouch.cnadn.net processes it and asks the browser to jump to the github.com/authorize interface. Since it has not logged in on github, github jumps to the /login interface to let the user log in.&lt;/p>
&lt;p>The login interface appears. After logging in, the authorization will be displayed. Clicking on the authorization will be redirected to vouch.cnadn.net (the service address of oauth proxy), which actually returns the authorization code to the oauth poxy service.&lt;/p>
&lt;p>After clicking the authorization, the browser will continue to jump. The github implementation will have the following jump prompt, which is actually the browser to jump to the callback interface of vouch.cnadn.net:&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/%E5%9B%BE%E7%89%87-3.png?v=1589095466" alt="">&lt;/p>
&lt;p>After the callback interface of vouch.cnadn.net is accessed, it will drive vouch to initiate access_token acquisition on the server side. At this time, the browser cannot capture it. When vouch has been obtained on the server, it returns a 302 to the browser again. This 302 requires the browser to officially access the application address, and is accompanied by the relevant cookie to the client browser:&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/1589096907088.jpg?v=1589096914" alt="">&lt;/p>
&lt;p>Finally completed the visit:&lt;/p>
&lt;p>&lt;img src="https://www.cnadn.net/upload/2020/05/1589097012011.jpg?v=1589097024" alt="">&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>Use NGINX&amp;rsquo;s auth_request function, and through clever configuration to use oauth proxy to achieve the complete authentication process of oAuth, and pass relevant user information to NGINX to achieve access control and information processing. Except for the back-end, all applications need to develop code to implement oauth verification, so that enterprises can quickly use third-party accounts to control user access&lt;/p>
&lt;h2 id="follow-up">Follow up&lt;/h2>
&lt;p>In this practice, the authorization code mode of oAuth is adopted, and the external oauth proxy service is used. If you do not want to rely on external services and want to implement on pure NGINX, you can refer to the second part of this series .&lt;/p>
&lt;p>Check more oAuth posts of the series at my tech blog &lt;a href="https://www.cnadn.net/?s=oauth">https://www.cnadn.net/?s=oauth&lt;/a>&lt;/p></description></item><item><title>Just a sample</title><link>http://linjing.io/post/snail/</link><pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate><guid>http://linjing.io/post/snail/</guid><description>&lt;p>&lt;strong>Create a free website with academia using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em>widgets&lt;/em>, &lt;em>themes&lt;/em>, and &lt;em>language packs&lt;/em> included!&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://academia-demo.netlify.com/">Check out the latest &lt;strong>demo&lt;/strong>&lt;/a> of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href="https://sourcethemes.com/academic/#expo">view the &lt;strong>showcase&lt;/strong>&lt;/a> of personal, project, and business sites.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#install">&lt;strong>Setup academia&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourcethemes.com/academic/docs/get-started/">&lt;strong>Get Started&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourcethemes.com/academic/docs/">View the documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://discuss.gohugo.io/">Ask a question&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gcushen/hugo-academia/issues">Request a feature or report a bug&lt;/a>&lt;/li>
&lt;li>Updating? View the &lt;a href="https://sourcethemes.com/academic/docs/update/">Update Guide&lt;/a> and &lt;a href="https://sourcethemes.com/academic/updates/">Release Notes&lt;/a>&lt;/li>
&lt;li>Support development of academia:
&lt;ul>
&lt;li>&lt;a href="https://paypal.me/cushen">Donate a coffee&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.patreon.com/cushen">Become a backer on Patreon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.redbubble.com/people/neutreno/works/34387919-academia">Decorate your laptop or journal with an academia sticker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://academia.threadless.com/">Wear the T-shirt&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/gcushen/hugo-academia/">&lt;img src="https://raw.githubusercontent.com/gcushen/hugo-academia/master/academia.png" alt="Screenshot">&lt;/a>&lt;/p>
&lt;p>&lt;strong>Key features:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Page builder&lt;/strong> - Create &lt;em>anything&lt;/em> with &lt;a href="https://sourcethemes.com/academic/docs/page-builder/">&lt;strong>widgets&lt;/strong>&lt;/a> and &lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/">&lt;strong>elements&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Edit any type of content&lt;/strong> - Blog posts, publications, talks, slides, projects, and more!&lt;/li>
&lt;li>&lt;strong>Create content&lt;/strong> in &lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/">&lt;strong>Markdown&lt;/strong>&lt;/a>, &lt;a href="https://sourcethemes.com/academic/docs/jupyter/">&lt;strong>Jupyter&lt;/strong>&lt;/a>, or &lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-rstudio">&lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Plugin System&lt;/strong> - Fully customizable &lt;a href="https://sourcethemes.com/academic/themes/">&lt;strong>color&lt;/strong> and &lt;strong>font themes&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Display Code and Math&lt;/strong> - Code highlighting and &lt;a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics">LaTeX math&lt;/a> supported&lt;/li>
&lt;li>&lt;strong>Integrations&lt;/strong> - &lt;a href="https://analytics.google.com">Google Analytics&lt;/a>, &lt;a href="https://disqus.com">Disqus commenting&lt;/a>, Maps, Contact Forms, and more!&lt;/li>
&lt;li>&lt;strong>Beautiful Site&lt;/strong> - Simple and refreshing one page design&lt;/li>
&lt;li>&lt;strong>Industry-Leading SEO&lt;/strong> - Help get your website found on search engines and social media&lt;/li>
&lt;li>&lt;strong>Media Galleries&lt;/strong> - Display your images and videos with captions in a customizable gallery&lt;/li>
&lt;li>&lt;strong>Mobile Friendly&lt;/strong> - Look amazing on every screen with a mobile friendly version of your site&lt;/li>
&lt;li>&lt;strong>Multi-language&lt;/strong> - 15+ language packs including English, 中文, and Português&lt;/li>
&lt;li>&lt;strong>Multi-user&lt;/strong> - Each author gets their own profile page&lt;/li>
&lt;li>&lt;strong>Privacy Pack&lt;/strong> - Assists with GDPR&lt;/li>
&lt;li>&lt;strong>Stand Out&lt;/strong> - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li>
&lt;li>&lt;strong>One-Click Deployment&lt;/strong> - No servers. No databases. Only files.&lt;/li>
&lt;/ul>
&lt;h2 id="color-themes">Color Themes&lt;/h2>
&lt;p>academia comes with &lt;strong>day (light) and night (dark) mode&lt;/strong> built-in. Click the sun/moon icon in the top right of the &lt;a href="https://academia-demo.netlify.com/">Demo&lt;/a> to see it in action!&lt;/p>
&lt;p>Choose a stunning color and font theme for your site. Themes are fully customizable and include:&lt;/p>
&lt;div class="gallery">
&lt;a data-fancybox="gallery-gallery" href="http://linjing.io/post/snail/gallery/theme-1950s.png" data-caption="1950s">
&lt;img src="http://linjing.io/post/snail/gallery/theme-1950s_huaf5482f8cea0c5a703a328640e3b7509_21614_0x190_resize_lanczos_2.png" alt="">
&lt;/a>
&lt;a data-fancybox="gallery-gallery" href="http://linjing.io/post/snail/gallery/theme-apogee.png" data-caption="Apogee">
&lt;img src="http://linjing.io/post/snail/gallery/theme-apogee_hu4b45d99db97150df01464c393bfd17d4_24119_0x190_resize_lanczos_2.png" alt="">
&lt;/a>
&lt;a data-fancybox="gallery-gallery" href="http://linjing.io/post/snail/gallery/theme-coffee-playfair.png" data-caption="Coffee theme with Playfair font">
&lt;img src="http://linjing.io/post/snail/gallery/theme-coffee-playfair_hu446a8f670cc5622adcc77b97ba95f6c5_22462_0x190_resize_lanczos_2.png" alt="">
&lt;/a>
&lt;a data-fancybox="gallery-gallery" href="http://linjing.io/post/snail/gallery/theme-dark.png" data-caption="Dark">
&lt;img src="http://linjing.io/post/snail/gallery/theme-dark_hu1e8601ecc47f58eada7743fdcd709d3d_21456_0x190_resize_lanczos_2.png" alt="">
&lt;/a>
&lt;a data-fancybox="gallery-gallery" href="http://linjing.io/post/snail/gallery/theme-default.png" data-caption="Default">
&lt;img src="http://linjing.io/post/snail/gallery/theme-default_huba6228b7bdf30e2f03f12ea91b2cba0d_21751_0x190_resize_lanczos_2.png" alt="">
&lt;/a>
&lt;a data-fancybox="gallery-gallery" href="http://linjing.io/post/snail/gallery/theme-forest.png" data-caption="Forest">
&lt;img src="http://linjing.io/post/snail/gallery/theme-forest_hu4f093a1c683134431456584193ea41ee_21797_0x190_resize_lanczos_2.png" alt="">
&lt;/a>
&lt;a data-fancybox="gallery-gallery" href="http://linjing.io/post/snail/gallery/theme-ocean.png" data-caption="Ocean">
&lt;img src="http://linjing.io/post/snail/gallery/theme-ocean_hu14831ccafc2219f30a7a096fa7617e01_21760_0x190_resize_lanczos_2.png" alt="">
&lt;/a>
&lt;a data-fancybox="gallery-gallery" href="http://linjing.io/post/snail/gallery/theme-strawberry.png" data-caption="Strawberry">
&lt;img src="http://linjing.io/post/snail/gallery/theme-strawberry_hu36b0b347fcca08bd39e2df22dcedbdfb_39532_0x190_resize_lanczos_2.png" alt="">
&lt;/a>
&lt;/div>
&lt;h2 id="ecosystem">Ecosystem&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/sourcethemes/academia-admin">academia Admin&lt;/a>:&lt;/strong> An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li>
&lt;li>&lt;strong>&lt;a href="https://github.com/sourcethemes/academia-scripts">academia Scripts&lt;/a>:&lt;/strong> Scripts to help migrate content to new versions of academia&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;p>You can choose from one of the following four methods to install:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-web-browser">&lt;strong>one-click install using your web browser (recommended)&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-git">install on your computer using &lt;strong>Git&lt;/strong> with the Command Prompt/Terminal app&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-zip">install on your computer by downloading the &lt;strong>ZIP files&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-rstudio">install on your computer with &lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Then &lt;a href="https://sourcethemes.com/academic/docs/get-started/">personalize and deploy your new site&lt;/a>.&lt;/p>
&lt;h2 id="updating">Updating&lt;/h2>
&lt;p>&lt;a href="https://sourcethemes.com/academic/docs/update/">View the Update Guide&lt;/a>.&lt;/p>
&lt;p>Feel free to &lt;em>star&lt;/em> the project on &lt;a href="https://github.com/gcushen/hugo-academia/">Github&lt;/a> to help keep track of &lt;a href="https://sourcethemes.com/academic/updates">updates&lt;/a>.&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>Copyright 2016-present &lt;a href="https://georgecushen.com">George Cushen&lt;/a>.&lt;/p>
&lt;p>Released under the &lt;a href="https://github.com/gcushen/hugo-academia/blob/master/LICENSE.md">MIT&lt;/a> license.&lt;/p></description></item></channel></rss>